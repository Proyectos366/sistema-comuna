/**
 @fileoverview Controlador de API para la consulta de todos los pa칤ses. Este archivo maneja la
 l칩gica para obtener todos los pa칤ses registrados en la base de datos mediante una solicitud
 HTTP GET. Utiliza Prisma para realizar consultas relacionales e incluye validaciones previas
 para asegurar el acceso autorizado. * @module
*/

// 游닍 Importaciones de m칩dulos y librer칤as
import prisma from "@/libs/prisma"; // Cliente de Prisma para la conexi칩n a la base de datos.
import { generarRespuesta } from "@/utils/respuestasAlFront"; // Utilidad para estandarizar las respuestas de la API.
import validarConsultarTodosPaises from "@/services/paises/validarConsultarTodosPaises"; // Servicio para validar la consulta de pa칤ses.

/**
 * Maneja las solicitudes HTTP GET para obtener todos los pa칤ses.
 * @async
 * @function GET
 * @returns {Promise<Response>} - Una respuesta HTTP en formato JSON con los pa칤ses encontrados o un error.
 */

export async function GET() {
  try {
    // 1. Ejecuta validaciones previas a la consulta
    const validaciones = await validarConsultarTodosPaises();

    // 2. Si la validaci칩n falla, retorna error
    if (validaciones.status === "error") {
      return generarRespuesta(
        validaciones.status,
        validaciones.message,
        {},
        400
      );
    }

    // 3. Consulta todos los pa칤ses no borrados, incluyendo relaciones anidadas
    const todosPaises = await prisma.pais.findMany({
      where: {
        borrado: false,
      },
      include: {
        estados: {
          include: {
            municipios: {
              include: {
                parroquias: true,
                instituciones: true,
              },
            },
          },
        },
      },
    });

    // 4. Si no se obtienen pa칤ses, retorna error
    if (!todosPaises) {
      return generarRespuesta(
        "error",
        "Error, al consultar paises...",
        {},
        400
      );
    }

    // 5. Retorna los pa칤ses encontrados con estado exitoso
    return generarRespuesta(
      "ok",
      "Todos los paises...",
      {
        paises: todosPaises,
      },
      201
    );
  } catch (error) {
    // 7. Manejo de errores inesperados
    console.log(`Error interno consultar (paises): ` + error);

    // Retorna una respuesta de error con un c칩digo de estado 500 (Internal Server Error)
    return generarRespuesta(
      "error",
      "Error, interno consultar (paises)",
      {},
      500
    );
  }
}
